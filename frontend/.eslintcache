[{"C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\index.js":"1","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\App.js":"3","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\Home.js":"4","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\Cart.js":"5","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\ProductDetail.js":"6","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\Navbar.js":"7","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\Products.js":"8","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\settings.js":"9","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\Discounts.js":"10","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\NewArrivals.js":"11","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\localStorage.js":"12","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\Login.js":"13","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\Checkout.js":"14","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\sessionStorage.js":"15","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\auth.js":"16"},{"size":528,"mtime":1608455067918,"results":"17","hashOfConfig":"18"},{"size":377,"mtime":1608455067919,"results":"19","hashOfConfig":"18"},{"size":1198,"mtime":1608542511474,"results":"20","hashOfConfig":"18"},{"size":1080,"mtime":1608474130832,"results":"21","hashOfConfig":"18"},{"size":5066,"mtime":1609421511329,"results":"22","hashOfConfig":"18"},{"size":3749,"mtime":1608541510757,"results":"23","hashOfConfig":"18"},{"size":3483,"mtime":1609421353371,"results":"24","hashOfConfig":"18"},{"size":7640,"mtime":1608552614356,"results":"25","hashOfConfig":"18"},{"size":160,"mtime":1608455067920,"results":"26","hashOfConfig":"18"},{"size":4152,"mtime":1609417646166,"results":"27","hashOfConfig":"18"},{"size":3908,"mtime":1609417596432,"results":"28","hashOfConfig":"18"},{"size":1283,"mtime":1608472428659,"results":"29","hashOfConfig":"18"},{"size":2444,"mtime":1609428444863,"results":"30","hashOfConfig":"18"},{"size":16968,"mtime":1609525061729,"results":"31","hashOfConfig":"18"},{"size":1295,"mtime":1608531582103,"results":"32","hashOfConfig":"18"},{"size":1480,"mtime":1608646266588,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1785qg5",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\index.js",[],["71","72"],"C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\App.js",[],"C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\Home.js",["73"],"import React from \"react\";\r\nimport { useLocalStorage } from \"../localStorage\";\r\nimport Discounts from \"./Discounts\";\r\nimport NewArrivals from \"./NewArrivals\";\r\n\r\nfunction Home() {\r\n  const [activity, setActivity] = useLocalStorage(\"activity\", {\r\n    viewNewArrivalsCount: 0,\r\n    viewDiscountedItemsCount: 0,\r\n  });\r\n\r\n  const renderBody = () => {\r\n    const { viewNewArrivalsCount, viewDiscountedItemsCount } = activity;\r\n\r\n    if (viewNewArrivalsCount > viewDiscountedItemsCount)\r\n      return (\r\n        <div>\r\n          <NewArrivals />\r\n          <Discounts />\r\n        </div>\r\n      );\r\n\r\n    if (viewNewArrivalsCount < viewDiscountedItemsCount)\r\n      return (\r\n        <div>\r\n          <Discounts />\r\n          <NewArrivals />\r\n        </div>\r\n      );\r\n\r\n    if (Math.random() < 0.5)\r\n      return (\r\n        <div>\r\n          <NewArrivals />\r\n          <Discounts />\r\n        </div>\r\n      );\r\n    else\r\n      return (\r\n        <div>\r\n          <Discounts />\r\n          <NewArrivals />\r\n        </div>\r\n      );\r\n  };\r\n\r\n  return renderBody();\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\Cart.js",["74","75","76"],"import React from \"react\";\r\nimport { ChevronDoubleRightOutline } from \"@graywolfai/react-heroicons\";\r\nimport { useSessionStorage } from \"../sessionStorage\";\r\nimport { useAuth } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { useEffect, useState } = React;\r\n\r\nfunction CartItemRow(props) {\r\n  const { idx, id, name, price, reducedPrice } = props;\r\n\r\n  const actualPrice = reducedPrice || price;\r\n\r\n  return (\r\n    <div className=\"table-row\">\r\n      <div className=\"table-cell text-right px-2\">{idx + 1}</div>\r\n      <div className=\"table-cell text-right px-2\">{id}</div>\r\n      <div className=\"table-cell text-left px-2\">{name}</div>\r\n      <div className=\"table-cell text-right px-2\">\r\n        â‚¹{\" \"}\r\n        {actualPrice.toLocaleString(\"en-IN\", {\r\n          minimumFractionDigits: 2,\r\n          maximumFractionDigits: 2,\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nasync function fetchProductsInCart(setProductsInCart) {\r\n  const product = {\r\n    id: 1,\r\n    name: \"Lenovo Legion\",\r\n    imageUrl: process.env.PUBLIC_URL + \"/images/lenovo-legion.jpg\",\r\n    price: 139999,\r\n    discountPercentage: 50,\r\n    reducedPrice: 69999,\r\n    category: \"Laptops\",\r\n    footnote: \"Free shipping till 25th December\",\r\n  };\r\n\r\n  const products = [product, { ...product, id: 2 }, { ...product, id: 3 }];\r\n\r\n  setProductsInCart(products);\r\n}\r\n\r\nfunction calculateTotalCost(products) {\r\n  return products.reduce(\r\n    (prev, curr) => prev + (curr.reducedPrice || curr.price),\r\n    0\r\n  );\r\n}\r\n\r\nfunction Cart() {\r\n  const [cart, setCart] = useSessionStorage(\"cart\", {\r\n    addedProductIds: {},\r\n    products: [],\r\n  });\r\n  const [totalCost, setTotalCost] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setTotalCost(calculateTotalCost(cart.products));\r\n  }, [cart]);\r\n\r\n  if (!cart.products || !totalCost) {\r\n    return (\r\n      <div>\r\n        <div className=\"p-2 text-4xl\">Your cart is empty.</div>\r\n        <div className=\"p-2 text-sm font-semibold\">\r\n          Add products to your cart to see them here.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-2\">\r\n      <div className=\"table w-full p-2\">\r\n        <div className=\"table-header-group text-sm\">\r\n          <div className=\"table-row font-semibold text-gray-600\">\r\n            <div className=\"table-cell text-right px-2 border-b-2\">#</div>\r\n            <div className=\"table-cell text-right px-2 border-b-2\">\r\n              Product Id\r\n            </div>\r\n            <div className=\"table-cell text-left px-2 border-b-2\">\r\n              Product Name\r\n            </div>\r\n            <div className=\"table-cell text-right px-2 border-b-2\">Price</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"table-row-group text-sm\">\r\n          {cart.products.map((product, idx) => (\r\n            <CartItemRow key={product.id} idx={idx} {...product} />\r\n          ))}\r\n        </div>\r\n        <div className=\"table-footer-group\">\r\n          <div className=\"table-row font-semibold\">\r\n            <div className=\"table-cell text-right px-2 border-t-2\"></div>\r\n            <div className=\"table-cell text-right px-2 border-t-2\"></div>\r\n            <div className=\"table-cell text-left px-2 border-t-2\">Subtotal</div>\r\n            <div className=\"table-cell text-right px-2 border-t-2\">\r\n              â‚¹{\" \"}\r\n              {totalCost.toLocaleString(\"en-IN\", {\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2,\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"table-row font-semibold text-gray-600 text-sm\">\r\n            <div className=\"table-cell text-right px-2\"></div>\r\n            <div className=\"table-cell text-right px-2\"></div>\r\n            <div className=\"table-cell text-left px-2\">\r\n              Delivery and shipping charges\r\n            </div>\r\n            <div className=\"table-cell text-right px-2 text-green-600 font-bold\">\r\n              Free\r\n            </div>\r\n          </div>\r\n          <div className=\"table-row font-semibold text-lg\">\r\n            <div className=\"table-cell text-right px-2 border-t-2\"></div>\r\n            <div className=\"table-cell text-right px-2 border-t-2\"></div>\r\n            <div className=\"table-cell text-left px-2 border-t-2\">Total</div>\r\n            <div className=\"table-cell text-right px-2 border-t-2\">\r\n              â‚¹{\" \"}\r\n              {totalCost.toLocaleString(\"en-IN\", {\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2,\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"flex mt-4 mb-4\">\r\n          <Link\r\n            to=\"/checkout\"\r\n            className=\"rounded-md p-1 flex border-2 border-blue-500 bg-blue-200 hover:bg-blue-500 hover:text-white font-medium\"\r\n          >\r\n            Continue and check out{\" \"}\r\n            <ChevronDoubleRightOutline className=\"h-4 w-4 ml-1 inline self-center\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\ProductDetail.js",["77"],"import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSessionStorage } from \"../sessionStorage\";\r\nimport SETTINGS from \"../settings\";\r\n\r\nconst { useEffect, useState } = React;\r\n\r\nfunction ProductDetailCard(props) {\r\n  const [cart, setCart] = useSessionStorage(\"cart\", {\r\n    addedProductIds: {},\r\n    products: [],\r\n  });\r\n\r\n  const {\r\n    id,\r\n    imageUrl,\r\n    name,\r\n    description,\r\n    isNewArrival,\r\n    price,\r\n    discountPercentage,\r\n    reducedPrice,\r\n    category,\r\n    footnote,\r\n  } = props.product;\r\n\r\n  const handleAddToCart = () => {\r\n    if (!cart.addedProductIds[id]) {\r\n      const cartCopy = { ...cart };\r\n      cartCopy.addedProductIds[id] = true;\r\n      cartCopy.products.push(props.product);\r\n      setCart(cartCopy);\r\n    }\r\n  };\r\n\r\n  const renderPriceSection = () => {\r\n    if (discountPercentage) {\r\n      return (\r\n        <>\r\n          <div className=\"text-xl text-gray-500 font-medium\">\r\n            â‚¹ {reducedPrice.toLocaleString(\"en-IN\")}\r\n          </div>\r\n          <div className=\"text-sm text-gray-500 p-1\">\r\n            <s>â‚¹ {price.toLocaleString(\"en-IN\")}</s>\r\n          </div>\r\n          <div className=\"text-sm font-semibold bg-green-300 rounded-sm p-1\">\r\n            {discountPercentage}% off\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <div className=\"text-xl text-gray-500 font-medium\">\r\n            â‚¹ {price.toLocaleString(\"en-IN\")}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderCategorySection = () => {\r\n    if (isNewArrival) {\r\n      return (\r\n        <>\r\n          <div className=\"text-sm font-medium text-blue-600\">\r\n            Flopkart exclusive\r\n          </div>\r\n          <div className=\"flex\">\r\n            <div className=\"text-sm bg-yellow-300 rounded-sm p-0.5\">\r\n              New in <span className=\"font-medium\">{category}</span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <div className=\"text-sm\">\r\n            In <span className=\"font-medium\">{category}</span>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex p-2 border-b-2 last:border-b-0\">\r\n      <div className=\"max-w-xs w-80\">\r\n        <img\r\n          src={`${SETTINGS.STATIC_ROOT_URL}/${imageUrl}`}\r\n          alt={name}\r\n          className=\"rounded-lg\"\r\n        />\r\n      </div>\r\n      <div className=\"flex-1 flex flex-col pl-4\">\r\n        <div className=\"font-semibold text-xl\">{name}</div>\r\n        <div className=\"flex\">{renderPriceSection()}</div>\r\n        {renderCategorySection()}\r\n        <div className=\"text-gray-700 text-sm mt-4\">{description}</div>\r\n        <div className=\"flex mt-4 mb-4\">\r\n          <button\r\n            onClick={() => handleAddToCart()}\r\n            className=\"rounded-md p-1 border-2 border-blue-500 hover:bg-blue-500 hover:text-white font-medium\"\r\n          >\r\n            Add to cart\r\n          </button>\r\n        </div>\r\n        <div className=\"text-sm text-gray-500\">{footnote}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nasync function fetchProduct(id, setProduct) {\r\n  const productRaw = await fetch(\r\n    `${SETTINGS.BASE_URL}/c/products?action=retrieve&id=${id}`\r\n  );\r\n  const product = await productRaw.json();\r\n\r\n  setProduct(product);\r\n}\r\n\r\nfunction ProductDetail() {\r\n  const { id } = useParams();\r\n  const [product, setProduct] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchProduct(id, setProduct);\r\n  }, [id]);\r\n\r\n  if (!product) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      <ProductDetailCard product={product} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductDetail;\r\n","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\Products.js",["78"],"import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useLocalStorage } from \"../localStorage\";\r\nimport { useSessionStorage } from \"../sessionStorage\";\r\nimport SETTINGS from \"../settings\";\r\n\r\nconst { useEffect, useState } = React;\r\n\r\nfunction ProductSummaryCard(props) {\r\n  const [cart, setCart] = useSessionStorage(\"cart\", {\r\n    addedProductIds: {},\r\n    products: [],\r\n  });\r\n\r\n  const {\r\n    id,\r\n    imageUrl,\r\n    name,\r\n    isNewArrival,\r\n    price,\r\n    discountPercentage,\r\n    reducedPrice,\r\n    category,\r\n    footnote,\r\n  } = props.product;\r\n\r\n  const handleAddToCart = () => {\r\n    if (!cart.addedProductIds[id]) {\r\n      const cartCopy = { ...cart };\r\n      cartCopy.addedProductIds[id] = true;\r\n      cartCopy.products.push(props.product);\r\n      setCart(cartCopy);\r\n    }\r\n  };\r\n\r\n  const renderPriceSection = () => {\r\n    if (discountPercentage) {\r\n      return (\r\n        <>\r\n          <div className=\"text-xl text-gray-500 font-medium\">\r\n            â‚¹ {reducedPrice.toLocaleString(\"en-IN\")}\r\n          </div>\r\n          <div className=\"text-sm text-gray-500 p-1\">\r\n            <s>â‚¹ {price.toLocaleString(\"en-IN\")}</s>\r\n          </div>\r\n          <div className=\"text-sm font-semibold bg-green-300 rounded-sm p-1\">\r\n            {discountPercentage}% off\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <div className=\"text-xl text-gray-500 font-medium\">\r\n            â‚¹ {price.toLocaleString(\"en-IN\")}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderCategorySection = () => {\r\n    if (isNewArrival) {\r\n      return (\r\n        <>\r\n          <div className=\"text-sm font-medium text-blue-600\">\r\n            Flopkart exclusive\r\n          </div>\r\n          <div className=\"flex\">\r\n            <div className=\"text-sm bg-yellow-300 rounded-sm p-0.5\">\r\n              New in <span className=\"font-medium\">{category}</span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <div className=\"text-sm\">\r\n            In <span className=\"font-medium\">{category}</span>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex p-2 border-b-2 last:border-b-0\">\r\n      <div className=\"max-w-xs w-80\">\r\n        <img\r\n          src={`${SETTINGS.STATIC_ROOT_URL}/${imageUrl}`}\r\n          alt={name}\r\n          className=\"rounded-lg max-h-80 ml-auto mr-auto\"\r\n        />\r\n      </div>\r\n      <div className=\"flex-1 flex flex-col pl-4\">\r\n        <div className=\"font-semibold text-xl\">{name}</div>\r\n        <div className=\"flex\">{renderPriceSection()}</div>\r\n        {renderCategorySection()}\r\n        <div className=\"flex-1\" />\r\n        <div className=\"flex mt-4 mb-4\">\r\n          <Link\r\n            to={`/products/${id}`}\r\n            className=\"rounded-md p-1 border-2 border-blue-200 mr-4 bg-blue-200 hover:bg-blue-500 hover:border-blue-500 hover:text-white font-medium\"\r\n          >\r\n            View details\r\n          </Link>\r\n          <button\r\n            onClick={() => handleAddToCart()}\r\n            className=\"rounded-md p-1 border-2 border-blue-500 hover:bg-blue-500 hover:text-white font-medium\"\r\n          >\r\n            Add to cart\r\n          </button>\r\n        </div>\r\n        <div className=\"text-sm text-gray-500\">{footnote}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nasync function fetchProducts(\r\n  setProducts,\r\n  searchQuery,\r\n  filterNewArrivalsFlag,\r\n  filterDiscountedItemsFlag\r\n) {\r\n  const productsRaw = await fetch(\r\n    `${SETTINGS.BASE_URL}/c/products?action=list`\r\n  );\r\n  const products = await productsRaw.json();\r\n\r\n  const filteredProducts = products.filter((product) => {\r\n    if (filterNewArrivalsFlag && filterDiscountedItemsFlag)\r\n      return product.isNewArrival && product.discountPercentage;\r\n\r\n    if (filterNewArrivalsFlag) return product.isNewArrival;\r\n\r\n    if (filterDiscountedItemsFlag) return product.discountPercentage;\r\n\r\n    return true;\r\n  });\r\n\r\n  if (searchQuery) {\r\n    const searchMatches = filteredProducts.filter(\r\n      (product) =>\r\n        product.name.toLowerCase().includes(searchQuery) ||\r\n        product.description.toLowerCase().includes(searchQuery) ||\r\n        product.category.toLowerCase().includes(searchQuery)\r\n    );\r\n\r\n    setProducts(searchMatches);\r\n    return;\r\n  }\r\n\r\n  setProducts(filteredProducts);\r\n}\r\n\r\nfunction Products() {\r\n  const [products, setProducts] = useState(null);\r\n  const [filterNewArrivalsFlag, setFilterNewArrivalsFlag] = useState(false);\r\n  const [filterDiscountedItemsFlag, setFilterDiscountedItemsFlag] = useState(\r\n    false\r\n  );\r\n  const location = useLocation();\r\n  const searchQuery = new URLSearchParams(location.search).get(\r\n    \"productSearchQuery\"\r\n  );\r\n\r\n  const [activity, setActivity] = useLocalStorage(\"activity\", {\r\n    viewNewArrivalsCount: 0,\r\n    viewDiscountedItemsCount: 0,\r\n  });\r\n\r\n  const handleNewArrivalsChecked = () => {\r\n    if (!filterNewArrivalsFlag) {\r\n      setActivity((curr) => ({\r\n        ...curr,\r\n        viewNewArrivalsCount: curr.viewNewArrivalsCount + 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleDiscountedItemsChecked = () => {\r\n    if (!filterDiscountedItemsFlag) {\r\n      setActivity((curr) => ({\r\n        ...curr,\r\n        viewDiscountedItemsCount: curr.viewDiscountedItemsCount + 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts(\r\n      setProducts,\r\n      searchQuery,\r\n      filterNewArrivalsFlag,\r\n      filterDiscountedItemsFlag\r\n    );\r\n  }, [searchQuery, filterNewArrivalsFlag, filterDiscountedItemsFlag]);\r\n\r\n  if (!products) {\r\n    return <div></div>;\r\n  }\r\n\r\n  const renderOptionalSearchSection = () => {\r\n    if (searchQuery) {\r\n      return (\r\n        <div className=\"p-2 font-semibold\">\r\n          Search results for{\" \"}\r\n          <span className=\"border-b-2 border-dashed border-red-600 p-1\">\r\n            {searchQuery}\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderProductsList = () => {\r\n    if (products.length === 0) {\r\n      return (\r\n        <div>\r\n          <div className=\"p-2 text-4xl\">No products were found.</div>\r\n          <div className=\"p-2 text-sm font-medium\">\r\n            {searchQuery\r\n              ? \"Try another search, remove filters or check your internet.\"\r\n              : \"Remove filters or check your internet.\"}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return products.map((product) => (\r\n      <ProductSummaryCard key={product.id} product={product} />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\"flex p-2 border-b-2\">\r\n        <div className=\"mr-8 font-bold\">Filters</div>\r\n        <div className=\"mr-4\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"mr-1\"\r\n            onChange={() => {\r\n              handleNewArrivalsChecked();\r\n              setFilterNewArrivalsFlag((val) => !val);\r\n            }}\r\n          />\r\n          <span className=\" text-sm font-semibold text-gray-600\">\r\n            New Arrivals\r\n          </span>\r\n        </div>\r\n        <div className=\"\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"mr-1\"\r\n            onChange={() => {\r\n              handleDiscountedItemsChecked();\r\n              setFilterDiscountedItemsFlag((val) => !val);\r\n            }}\r\n          />\r\n          <span className=\"text-sm font-semibold text-gray-600\">Deals</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex-1\">\r\n        {renderOptionalSearchSection()}\r\n        {renderProductsList()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\settings.js",[],"C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\Discounts.js",[],"C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\NewArrivals.js",[],"C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\localStorage.js",[],"C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\Login.js",[],"C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\components\\Checkout.js",["79"],"C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\sessionStorage.js",[],"C:\\Users\\Supratik basu\\Desktop\\Sem7\\IT-Lab\\flopkart\\frontend\\src\\auth.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":7,"column":20,"nodeType":"86","messageId":"87","endLine":7,"endColumn":31},{"ruleId":"84","severity":1,"message":"88","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":17},{"ruleId":"84","severity":1,"message":"89","line":30,"column":16,"nodeType":"86","messageId":"87","endLine":30,"endColumn":35},{"ruleId":"84","severity":1,"message":"90","line":55,"column":16,"nodeType":"86","messageId":"87","endLine":55,"endColumn":23},{"ruleId":"84","severity":1,"message":"91","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":14},{"ruleId":"84","severity":1,"message":"92","line":169,"column":10,"nodeType":"86","messageId":"87","endLine":169,"endColumn":18},{"ruleId":"84","severity":1,"message":"90","line":405,"column":16,"nodeType":"86","messageId":"87","endLine":405,"endColumn":23},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'setActivity' is assigned a value but never used.","Identifier","unusedVar","'useAuth' is defined but never used.","'fetchProductsInCart' is defined but never used.","'setCart' is assigned a value but never used.","'Link' is defined but never used.","'activity' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]